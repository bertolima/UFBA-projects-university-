LEIA

A justificativa para o uso das estruturas de dados escolhidas é a seguinte:

A classe Carta representa uma única carta do jogo, com um valor e um naipe.
A classe Baralho é responsável por criar o baralho completo, com todas as cartas, embaralhá-las e permitir a retirada de uma carta do topo do baralho.
A classe Jogador representa um jogador do jogo, com um nome e uma lista de cartas em sua mão. O jogador pode receber cartas e jogar uma carta específica de sua mão.
A classe JogoMico é responsável por coordenar o jogo em si. Ela possui um baralho, uma lista de jogadores e o mico. O jogo começa com a distribuição das cartas, definição do jogador inicial e a jogada propriamente dita.

A complexidade dos principais métodos utilizados é a seguinte:

A criação do baralho na classe Baralho tem uma complexidade de O(1), pois envolve apenas a iteração sobre os naipes e valores das cartas.
O método embaralhar da classe Baralho utiliza o algoritmo de Fisher-Yates para embaralhar as cartas, o que possui uma complexidade de O(n), onde n é o número de cartas no baralho.
O método retirar_carta da classe Baralho tem uma complexidade de O(1), pois a retirada da carta é feita a partir do topo do baralho.
O método distribuir_cartas da classe JogoMico possui uma complexidade de O(n), onde n é o número de jogadores, pois é necessário iterar sobre os jogadores e distribuir as cartas de forma alternada.
O método verificar_fim_de_jogo da classe JogoMico possui uma complexidade de O(n), onde n é o número de jogadores, pois é necessário verificar se todos os jogadores estão sem cartas.